---- from the book All About Maude
---- from the Maude Manual
---- by the Maude team

load model-checker.maude
load rrobin.maude

omod CHECK-RROBIN{N :: NZNAT#} is
  pr RROBIN{N} .
  inc MODEL-CHECKER .
  inc SATISFACTION .
  ex LTL-SIMPLIFIER .
  inc LTL .

  subsort Configuration < State .

  op inCrit : Nat/{N} -> Prop .
  op twoInCrit : -> Prop .

  var  N : Nat .
  vars X Y : Nat/{N} .
  var  C : Configuration .
  var  F : Formula .

  eq < X : Proc | mode : critical > C |= inCrit(X) = true .
  eq < X : Proc | mode : critical > < Y : Proc | mode : critical > C
       |= twoInCrit = true .

  op guaranteedReentrance : -> Formula .
  op allProcessesReenter : Nat -> Formula .
  op nextIter_ : Formula -> Formula .
  op nextIterAux : Nat Formula -> Formula .

  eq guaranteedReentrance = allProcessesReenter(#) .

  eq allProcessesReenter(s N)
    = (inCrit([s N]) -> nextIter inCrit([s N])) /\
      allProcessesReenter(N) .
  eq allProcessesReenter(0) = inCrit([0]) -> nextIter inCrit([0]) .

  eq nextIter F = nextIterAux(2 * #, F) .

  eq nextIterAux(s N, F) = O nextIterAux(N, F) .
  eq nextIterAux(0, F) = F .
endom

load view-5.maude

mod CHECK-RROBIN-5 is
  inc CHECK-RROBIN{5} .
endm

reduce in CHECK-RROBIN-5 :
          modelCheck(init, [] ~ twoInCrit) .

reduce in CHECK-RROBIN-5 :
          modelCheck(init, [] guaranteedReentrance) .

red in CHECK-RROBIN-5 :
          modelCheck(init, [] (inCrit([1]) -> O O O inCrit([1]))) .
